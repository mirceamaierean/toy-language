Id: 1
Execution stack:
IntegerType v; v = 0; While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};; Wait(5); print((v * 10))
SymTable:
Output:
Filetable:
Heap:


Id: 1
Execution stack:
IntegerType v
v = 0; While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};; Wait(5); print((v * 10))
SymTable:
Output:
Filetable:
Heap:


Id: 1
Execution stack:
v = 0; While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};; Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
v = 0
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};; Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};; Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
fork(print(v); v = (v + 1)); v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
fork(print(v); v = (v + 1))
v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 2
Execution stack:
print(v); v = (v + 1)
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 1
Output:
Filetable:
Heap:


Id: 2
Execution stack:
print(v)
v = (v + 1)
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
fork(print(v); v = (v + 1)); v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 1
Output:
0
Filetable:
Heap:


Id: 2
Execution stack:
v = (v + 1)
SymTable:
v(IntegerType):-> 0
Output:
0
Filetable:
Heap:


Id: 1
Execution stack:
fork(print(v); v = (v + 1))
v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 1
Output:
0
Filetable:
Heap:


Id: 2
Execution stack:
SymTable:
v(IntegerType):-> 1
Output:
0
Filetable:
Heap:


Id: 1
Execution stack:
v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 1
Output:
0
Filetable:
Heap:


Id: 3
Execution stack:
print(v); v = (v + 1)
SymTable:
v(IntegerType):-> 1
Output:
0
Filetable:
Heap:


Id: 1
Execution stack:
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 2
Output:
0
Filetable:
Heap:


Id: 3
Execution stack:
print(v)
v = (v + 1)
SymTable:
v(IntegerType):-> 1
Output:
0
Filetable:
Heap:


Id: 1
Execution stack:
fork(print(v); v = (v + 1)); v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 2
Output:
0
1
Filetable:
Heap:


Id: 3
Execution stack:
v = (v + 1)
SymTable:
v(IntegerType):-> 1
Output:
0
1
Filetable:
Heap:


Id: 1
Execution stack:
fork(print(v); v = (v + 1))
v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 2
Output:
0
1
Filetable:
Heap:


Id: 3
Execution stack:
SymTable:
v(IntegerType):-> 2
Output:
0
1
Filetable:
Heap:


Id: 1
Execution stack:
v = (v + 1)
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 2
Output:
0
1
Filetable:
Heap:


Id: 4
Execution stack:
print(v); v = (v + 1)
SymTable:
v(IntegerType):-> 2
Output:
0
1
Filetable:
Heap:


Id: 1
Execution stack:
While((v < 3)){fork(print(v); v = (v + 1)); v = (v + 1)};
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
Filetable:
Heap:


Id: 4
Execution stack:
print(v)
v = (v + 1)
SymTable:
v(IntegerType):-> 2
Output:
0
1
Filetable:
Heap:


Id: 1
Execution stack:
Wait(5); print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
Filetable:
Heap:


Id: 4
Execution stack:
v = (v + 1)
SymTable:
v(IntegerType):-> 2
Output:
0
1
2
Filetable:
Heap:


Id: 1
Execution stack:
Wait(5)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
Filetable:
Heap:


Id: 4
Execution stack:
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
Filetable:
Heap:


Id: 1
Execution stack:
print(5)
Wait(4)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
Filetable:
Heap:


Id: 1
Execution stack:
Wait(4)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
Filetable:
Heap:


Id: 1
Execution stack:
print(4)
Wait(3)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
Filetable:
Heap:


Id: 1
Execution stack:
Wait(3)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
Filetable:
Heap:


Id: 1
Execution stack:
print(3)
Wait(2)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
Filetable:
Heap:


Id: 1
Execution stack:
Wait(2)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
3
Filetable:
Heap:


Id: 1
Execution stack:
print(2)
Wait(1)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
3
Filetable:
Heap:


Id: 1
Execution stack:
Wait(1)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
3
2
Filetable:
Heap:


Id: 1
Execution stack:
print(1)
Wait(0)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
3
2
Filetable:
Heap:


Id: 1
Execution stack:
Wait(0)
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
3
2
1
Filetable:
Heap:


Id: 1
Execution stack:
print((v * 10))
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
3
2
1
Filetable:
Heap:


Id: 1
Execution stack:
SymTable:
v(IntegerType):-> 3
Output:
0
1
2
5
4
3
2
1
30
Filetable:
Heap:


Id: 1
Execution stack:
IntegerType v; Wait(10); print(v)
SymTable:
Output:
Filetable:
Heap:


Id: 1
Execution stack:
IntegerType v
Wait(10); print(v)
SymTable:
Output:
Filetable:
Heap:


Id: 1
Execution stack:
Wait(10); print(v)
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
Wait(10)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
print(10)
Wait(9)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
Wait(9)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
Filetable:
Heap:


Id: 1
Execution stack:
print(9)
Wait(8)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
Filetable:
Heap:


Id: 1
Execution stack:
Wait(8)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
Filetable:
Heap:


Id: 1
Execution stack:
print(8)
Wait(7)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
Filetable:
Heap:


Id: 1
Execution stack:
Wait(7)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
Filetable:
Heap:


Id: 1
Execution stack:
print(7)
Wait(6)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
Filetable:
Heap:


Id: 1
Execution stack:
Wait(6)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
Filetable:
Heap:


Id: 1
Execution stack:
print(6)
Wait(5)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
Filetable:
Heap:


Id: 1
Execution stack:
Wait(5)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
Filetable:
Heap:


Id: 1
Execution stack:
print(5)
Wait(4)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
Filetable:
Heap:


Id: 1
Execution stack:
Wait(4)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
Filetable:
Heap:


Id: 1
Execution stack:
print(4)
Wait(3)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
Filetable:
Heap:


Id: 1
Execution stack:
Wait(3)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
Filetable:
Heap:


Id: 1
Execution stack:
print(3)
Wait(2)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
Filetable:
Heap:


Id: 1
Execution stack:
Wait(2)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
3
Filetable:
Heap:


Id: 1
Execution stack:
print(2)
Wait(1)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
3
Filetable:
Heap:


Id: 1
Execution stack:
Wait(1)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
3
2
Filetable:
Heap:


Id: 1
Execution stack:
print(1)
Wait(0)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
3
2
Filetable:
Heap:


Id: 1
Execution stack:
Wait(0)
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
3
2
1
Filetable:
Heap:


Id: 1
Execution stack:
print(v)
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
3
2
1
Filetable:
Heap:


Id: 1
Execution stack:
SymTable:
v(IntegerType):-> 0
Output:
10
9
8
7
6
5
4
3
2
1
0
Filetable:
Heap:


Id: 1
Execution stack:
IntegerType v; v = 20; Wait(10); print(v)
SymTable:
Output:
Filetable:
Heap:


Id: 1
Execution stack:
IntegerType v
v = 20; Wait(10); print(v)
SymTable:
Output:
Filetable:
Heap:


Id: 1
Execution stack:
v = 20; Wait(10); print(v)
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
v = 20
Wait(10); print(v)
SymTable:
v(IntegerType):-> 0
Output:
Filetable:
Heap:


Id: 1
Execution stack:
Wait(10); print(v)
SymTable:
v(IntegerType):-> 20
Output:
Filetable:
Heap:


Id: 1
Execution stack:
Wait(10)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
Filetable:
Heap:


Id: 1
Execution stack:
print(10)
Wait(9)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
Filetable:
Heap:


Id: 1
Execution stack:
Wait(9)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
Filetable:
Heap:


Id: 1
Execution stack:
print(9)
Wait(8)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
Filetable:
Heap:


Id: 1
Execution stack:
Wait(8)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
Filetable:
Heap:


Id: 1
Execution stack:
print(8)
Wait(7)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
Filetable:
Heap:


Id: 1
Execution stack:
Wait(7)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
Filetable:
Heap:


Id: 1
Execution stack:
print(7)
Wait(6)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
Filetable:
Heap:


Id: 1
Execution stack:
Wait(6)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
Filetable:
Heap:


Id: 1
Execution stack:
print(6)
Wait(5)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
Filetable:
Heap:


Id: 1
Execution stack:
Wait(5)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
Filetable:
Heap:


Id: 1
Execution stack:
print(5)
Wait(4)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
Filetable:
Heap:


Id: 1
Execution stack:
Wait(4)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
Filetable:
Heap:


Id: 1
Execution stack:
print(4)
Wait(3)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
Filetable:
Heap:


Id: 1
Execution stack:
Wait(3)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
Filetable:
Heap:


Id: 1
Execution stack:
print(3)
Wait(2)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
Filetable:
Heap:


Id: 1
Execution stack:
Wait(2)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
3
Filetable:
Heap:


Id: 1
Execution stack:
print(2)
Wait(1)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
3
Filetable:
Heap:


Id: 1
Execution stack:
Wait(1)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
3
2
Filetable:
Heap:


Id: 1
Execution stack:
print(1)
Wait(0)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
3
2
Filetable:
Heap:


Id: 1
Execution stack:
Wait(0)
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
3
2
1
Filetable:
Heap:


Id: 1
Execution stack:
print(v)
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
3
2
1
Filetable:
Heap:


Id: 1
Execution stack:
SymTable:
v(IntegerType):-> 20
Output:
10
9
8
7
6
5
4
3
2
1
20
Filetable:
Heap:


